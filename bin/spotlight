#! /usr/bin/env bash
export FD_COMMAND="fd -L --no-ignore-vcs"
export FD_NOIGNORE="fd -L --no-ignore"
export FZF_DEFAULT_COMMAND="$FD_COMMAND | sed 's/^.\///'"

# bindings
export SEL="ctrl-i"
export TOGGLE_SORT="ctrl-s"
export SEL_ALL="alt-a"
export DESEL_ALL="alt-A"
export SEARCH_DIRS="ctrl-d"
export SEARCH_FILES="ctrl-f"
export RELOAD="ctrl-r"
export DELETE="alt-r"
export XDRAGON="ctrl-t"
export TOGGLE_PREVIEW="ctrl-space"
export COPY_PATH="ctrl-y"
export CLEAR_IMG="ctrl-/"
export IGNORE="alt-i"
export PREVIEW_DOWN="alt-d"
export PREVIEW_UP="alt-u"

files=$(fzf \
    --extended \
    --multi \
    --prompt "Search> " \
    --bind change:first \
    --bind "$SEL:toggle-out" \
    --bind "$TOGGLE_SORT:toggle-sort" \
    --bind "$SEL_ALL:select-all" \
    --bind "$DESEL_ALL:deselect-all" \
    --bind "$SEARCH_DIRS:change-prompt(Directories only> )+reload(fd -L --type d)+execute(kitty icat --clear)" \
    --bind "$SEARCH_FILES:change-prompt(Files only> )+reload($FD_COMMAND)" \
    --bind "$RELOAD:change-prompt(Search> )+reload($FD_COMMAND)" \
    --bind "$DELETE:execute(rm -i {})+reload($FD_COMMAND)" \
    --bind "$XDRAGON:become(setsid -f dragon -x -a {+} && kill \"$$\")" \
    --bind "$TOGGLE_PREVIEW:toggle-preview+execute(kitty icat --clear)" \
    --bind "$COPY_PATH:execute-silent(timeout 1s xclip -se c <(echo {}))" \
    --bind "$PREVIEW_DOWN:preview-down" \
    --bind "$PREVIEW_UP:preview-up" \
    --bind "$IGNORE:reload($FD_NOIGNORE)" \
    --bind "$CLEAR_IMG:change-preview-window(hidden)+execute(kitty icat --clear)" \
    --header "$DESEL_ALL/A: Select/deselect all | $SEARCH_DIRS: Search dirs | $SEARCH_FILES: Search files | $XDRAGON: Open with xdragon | $TOGGLE_PREVIEW: toggle preview | $CLEAR_IMG: clear images" \
    --border \
    --padding 1 \
    --preview-window hidden \
    --preview "
        if file --mime-type {} | grep -qF 'image/'; then
           kitty icat --clear --transfer-mode=stream --stdin=no --place=\${FZF_PREVIEW_COLUMNS}x\${FZF_PREVIEW_LINES}@0x0 {}
        elif file --mime-type {} | grep -qF 'text/csv'; then
          csview {}
        elif file --mime-type {} | grep -qF 'inode/directory'; then
           eza --tree --color --icons {}
        elif file --mime-type {} | grep -qF 'inode/directory'; then
           eza --tree --color --icons {}
        else
          bat --color=always {}
        fi
    "
)

echo "$files"
for file in $files; do
    setsid -f xdg-open $file
done
